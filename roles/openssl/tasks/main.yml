---
-   name: "Installing openssl"
    homebrew:
        name: openssl
        state: latest

-   name: "Install crtgen tool"
    template:
        src: crtgen.j2
        dest: "{{ brew_install_path }}/bin/crtgen"
        mode: u+rx

-   name: "Install hostnames tool"
    template:
        src: "hostnames.j2"
        dest: "{{ brew_install_path }}/bin/hostnames"
        mode: u+rx
        trim_blocks: false

-   name: "Creates localCA directories"
    file:
        path: "{{item}}"
        state: directory
        mode: 0755
    with_items:
        - "{{ brew_install_path }}/etc/openssl/localCA/certs"
        - "{{ brew_install_path }}/etc/openssl/localCA/newcerts"
        - "{{ brew_install_path }}/etc/openssl/localCA/crl"
        - "{{ brew_install_path }}/etc/openssl/localCA/private"

-   stat:
        path: "{{ brew_install_path }}/etc/openssl/localCA/caconfig.cnf"
    register: state

-   name: "Creates ca config"
    template:
        src: ssl/caconfig.cnf.j2
        dest: "{{ brew_install_path }}/etc/openssl/localCA/caconfig.cnf"
    when: not state.stat.exists

-   name: "Creates config for domains"
    template:
        src: ssl/domain.cnf.j2
        dest: "{{ brew_install_path }}/etc/openssl/localCA/{{item}}_{{root_domain}}.cnf"
    with_items: "{{subdomains}}"

-   name: "Check if /usr/share/ca-certificates exists"
    stat:
        path: "/usr/share/ca-certificates"
    register: usr_share_ca_certificates_state
    when: ansible_system == "Linux"

-   name: "(Linux only) Ensure /usr/share/ca-certificates/extra"
    file:
        path: "/usr/share/ca-certificates/extra"
        state: directory
        mode: 0755
    become: yes
    ignore_errors: yes
    when: ansible_system == "Linux" and usr_share_ca_certificates_state.stat.exists

-   name: "(Linux only) Ensure symlink: {{ brew_install_path }}/etc/openssl/openssl.cnf"
    file:
        src: "/etc/ssl/openssl.cnf"
        dest: "{{ brew_install_path }}/etc/openssl/openssl.cnf"
        state: link
        force: yes
    when: ansible_system == "Linux"
    become: true

-   name: "(Linux only) Ensure symlink: {{ brew_install_path }}/etc/openssl/certs"
    file:
        src: "/etc/ssl/certs"
        dest: "{{ brew_install_path }}/etc/openssl/certs"
        state: link
        force: yes
    when: ansible_system == "Linux"
    become: true

-   name: "Check if /etc/ssl/certs/ca-certificates.crt exists"
    stat:
        path: "/etc/ssl/certs/ca-certificates.crt"
    register: ca_certificates_state
    when: ansible_system == "Linux"
    become: true

-   name: "Check if /var/lib/ca-certificates/ca-bundle.pem exists"
    stat:
        path: "/var/lib/ca-certificates/ca-bundle.pem"
    register: ca_bundle_state
    when: ansible_system == "Linux"
    become: true

-   name: "Check if openssl folder exists"
    stat:
        path: "{{ brew_install_path }}/etc/openssl"
    register: brew_etc_openssl_dir
    when: ansible_system == "Linux"
    become: true

-   name: "(Linux only) Absent {{ brew_install_path }}/etc/openssl/cert.pem"
    file:
        path: "{{ brew_install_path }}/etc/openssl/cert.pem"
        state: absent
    when: ansible_system == "Linux"
    become: true

-   name: "(Linux only) Ensure symlink: {{ brew_install_path }}/etc/openssl/certs/ca-certificates.crt -> /etc/ssl/certs/ca-certificates.crt"
    file:
        src: "/etc/ssl/certs/ca-certificates.crt"
        dest: "{{ brew_install_path }}/etc/openssl/cert.pem"
        state: link
    when: ansible_system == "Linux" and ca_certificates_state.stat.exists and brew_etc_openssl_dir.stat.exists
    become: true

-   name: "(Linux only) Ensure symlink: {{ brew_install_path }}/etc/openssl/certs/ca-certificates.crt -> /var/lib/ca-certificates/ca-bundle.pem"
    file:
        src: "/var/lib/ca-certificates/ca-bundle.pem"
        dest: "{{ brew_install_path }}/etc/openssl/cert.pem"
        state: link
    when: ansible_system == "Linux" and ca_bundle_state.stat.exists and brew_etc_openssl_dir.stat.exists and not ca_certificates_state.stat.exists
    become: true

-   name: "(Linux only) Absent {{ brew_install_path }}/etc/openssl@1.1/cert.pem"
    file:
        path: "{{ brew_install_path }}/etc/openssl@1.1/cert.pem"
        state: absent
    when: ansible_system == "Linux"
    become: true

-   name: "Check if openssl@1.1 folder exists"
    stat:
        path: "{{ brew_install_path }}/etc/openssl@1.1"
    register: brew_etc_openssl11_dir
    when: ansible_system == "Linux"
    become: true

-   name: "(Linux only) Ensure symlink: {{ brew_install_path }}/etc/openssl@1.1/certs/ca-certificates.crt -> /etc/ssl/certs/ca-certificates.crt"
    file:
        src: "/etc/ssl/certs/ca-certificates.crt"
        dest: "{{ brew_install_path }}/etc/openssl@1.1/cert.pem"
        state: link
    when: ansible_system == "Linux" and ca_certificates_state.stat.exists and brew_etc_openssl11_dir.stat.exists
    become: true

-   name: "(Linux only) Ensure symlink: {{ brew_install_path }}/etc/openssl@1.1/certs/ca-certificates.crt -> /var/lib/ca-certificates/ca-bundle.pem"
    file:
        src: "/var/lib/ca-certificates/ca-bundle.pem"
        dest: "{{ brew_install_path }}/etc/openssl@1.1/cert.pem"
        state: link
    when: ansible_system == "Linux" and ca_bundle_state.stat.exists and brew_etc_openssl11_dir.stat.exists and not ca_certificates_state.stat.exists
    become: true

-   name: "(Linux only) Absent {{ brew_install_path }}/etc/openssl@3/cert.pem"
    file:
        path: "{{ brew_install_path }}/etc/openssl@3/cert.pem"
        state: absent
    when: ansible_system == "Linux"
    become: true

-   name: "Check if openssl@3 folder exists"
    stat:
        path: "{{ brew_install_path }}/etc/openssl@3"
    register: brew_etc_openssl3_dir
    when: ansible_system == "Linux"
    become: true

-   name: "(Linux only) Ensure symlink: {{ brew_install_path }}/etc/openssl@3/certs/ca-certificates.crt -> /etc/ssl/certs/ca-certificates.crt"
    file:
        src: "/etc/ssl/certs/ca-certificates.crt"
        dest: "{{ brew_install_path }}/etc/openssl@3/cert.pem"
        state: link
    when: ansible_system == "Linux" and ca_certificates_state.stat.exists and brew_etc_openssl3_dir.stat.exists
    become: true

-   name: "(Linux only) Ensure symlink: {{ brew_install_path }}/etc/openssl@3/certs/ca-certificates.crt -> /var/lib/ca-certificates/ca-bundle.pem"
    file:
        src: "/var/lib/ca-certificates/ca-bundle.pem"
        dest: "{{ brew_install_path }}/etc/openssl@3/cert.pem"
        state: link
    when: ansible_system == "Linux" and ca_bundle_state.stat.exists and brew_etc_openssl3_dir.stat.exists and not ca_certificates_state.stat.exists
    become: true

-   name: "(Linux only) Ensure symlink: {{ brew_install_path }}/etc/openssl/private"
    file:
        src: "/etc/ssl/private"
        dest: "{{ brew_install_path }}/etc/openssl/private"
        state: link
        force: yes
    when: ansible_system == "Linux"
    become: true

-   name: "Check if certificate already generated"
    stat:
        path: "{{ brew_install_path }}/etc/openssl/localCA/cacert.pem"
    register: state

-   name: "Generate the Certificate Authority (CA) certificate"
    shell: 'openssl req -x509 -sha256 -newkey rsa:2048 -nodes -days 1825 -outform PEM -out {{ brew_install_path }}/etc/openssl/localCA/cacert.pem'
    when: not state.stat.exists
    environment:
        OPENSSL_CONF: "{{ brew_install_path }}/etc/openssl/localCA/caconfig.cnf"

#-   name: "(macOS only) Installing root certificate to keychain"
#    shell: 'security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain {{ brew_install_path }}/etc/openssl/localCA/cacert.pem'
#    become: true
#    when: ansible_system == "Darwin"

-   name: "Check if /usr/share/ca-certificates/extra exists"
    stat:
        path: "/usr/share/ca-certificates/extra"
    register: usr_share_ca_certificates_extra_state

-   name: "Check if /usr/local/share/ca-certificates exists"
    stat:
        path: "/usr/local/share/ca-certificates"
    register: usr_local_share_ca_certificates_state

-   name: "(Linux only) Installing root certificate /usr/share/ca-certificates/extra"
    copy:
        src: '{{ brew_install_path }}/etc/openssl/localCA/cacert.pem'
        dest: '/usr/share/ca-certificates/extra/cacert.crt'
    become: yes
    when: ansible_system == "Linux" and usr_share_ca_certificates_extra_state.stat.exists

-   name: "(Linux only) Installing root certificate /usr/local/share/ca-certificates"
    copy:
        src: '{{ brew_install_path }}/etc/openssl/localCA/cacert.pem'
        dest: '/usr/local/share/ca-certificates/cacert.crt'
    become: yes
    when: ansible_system == "Linux" and usr_local_share_ca_certificates_state.stat.exists

-   name: "(Linux only) Running update-ca-certificates"
    shell: 'update-ca-certificates'
    become: yes
    when: ansible_system == "Linux"

-   name: "Checking if the Certificate Database already exists"
    stat:
        path: "{{ brew_install_path }}/etc/openssl/localCA/index.txt"
    register: state

-   name: "Create the Certificate Database if not exists"
    shell: "echo '01' > {{ brew_install_path }}/etc/openssl/localCA/serial && touch {{ brew_install_path }}/etc/openssl/localCA/index.txt"
    when: not state.stat.exists
